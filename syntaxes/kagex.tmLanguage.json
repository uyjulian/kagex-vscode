// [PackageDev] target_format: plist, ext: tmLanguage
{
  "$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
  "name": "kagex",
  "fileTypes": ["ks"],
  "patterns": [
    { "include": "#comment" },
    { "include": "#label" },
    { "include": "#name" },
    { "include": "#iscript" },
    { "include": "#tag" }
  ],
  "repository": {
    "comment": {"patterns": [
        {
            "begin": "^\\t*;",
            "end": "$",
            "name": "comment.line.semicoron.kagex"
        }
      ]
    },
    "label": {"patterns": [
        {
            "begin": "^\\t*\\*([^\\|]*)\\|?",
            "end": "$",
            "name": "entity.name.tag.kagex",
            "patterns": [
                {
                    "include": "#attribute-rvalue"
                }
            ]
        }
    ]
    },
    "iscript": {
      "patterns": [
        {
          "begin": "(?<!\\[)\\[iscript\\]|^\\t*@iscript",
          "end": "\\[endscript\\]|^\\t*@endscript",
          "beginCaptures": {
              "0": { "name": "keyword.control.kagex" }
          },
          "endCaptures": {
              "0": { "name": "keyword.control.kagex" }
          },
          "patterns": [
              { "include": "source.tjs" }
          ]
        }
      ]
    },
    "name": {
      "patterns": [
        {
            "begin": "^\\t*【",
            "end": "】",
            "name": "keyword.other.kagex"
        }
      ]
    },
    "tag": {
      "patterns": [
        {
            "begin": "(?<!\\[)\\[\\s*\\w+",
            "end": "\\]",
            "name": "meta.tag.kagex",
            "beginCaptures": {
                "0": { "name": "entity.name.type.kagex" }
            },
            "endCaptures": {
                "0": { "name": "entity.name.type.kagex" }
            },
            "patterns": [
                { "include": "#attribute" }
            ]
        },
        {
            "begin": "^\\t*@\\s*\\w+",
            "end": "(?<!\\\\)$",
            "name": "meta.tag.commandline.kagex",
            "beginCaptures": {
                "0": { "name": "entity.name.type.kagex" }
            },
            "patterns": [
                { "include": "#attribute" }
            ]
        }
      ]
    },
    "attribute": {
      "patterns": [
        { "include": "#attribute-inline-exp-quotes" },
        { "include": "#attribute-inline-exp-noquotes" },
        { "include": "#attribute-keyword-exp-quotes" },
        { "include": "#attribute-keyword-exp-noquotes" },
        { "include": "#attribute-quotes" },
        { "include": "#attribute-noquotes" },
        { "include": "#attribute-noarg" }
        
      ]
    },
    "attribute-quotes": {
      "patterns": [
        {
            "begin": "(\\w+)(\\s*=\\s*(%?(\"|')))",
            "beginCaptures": {
                "1": { "name": "entity.name.function.kagex" },
                "4": { "name": "string.quoted.single.kagex" }
            },
            "end": "(\\4|$)",
            "endCaptures": {
                "1": { "name": "string.quoted.single.kagex" }
            },
            "patterns": [
                {
                    "include": "#attribute-rvalue"
                }
            ]
        }
      ]
    },
    "attribute-inline-exp-quotes": {
      "patterns": [
        {
            "begin": "(\\w+)(\\s*=\\s*(&(\"|')))",
            "beginCaptures": {
                "1": { "name": "entity.name.function.kagex" },
                "4": { "name": "string.quoted.single.kagex" }
            },
            "end": "(\\4|$)",
            "endCaptures": {
                "1": { "name": "string.quoted.single.kagex" }
            },
            "patterns": [
                { "include": "source.tjs" }
            ]
        }
      ]
    },
    "attribute-inline-exp-noquotes": {
      "patterns": [
        {
            "begin": "(\\w+)(\\s*=\\s*&)",
            "beginCaptures": {
                "1": { "name": "entity.name.function.kagex" }
            },
            "end": "(?=[\\s\\]]|$)",
            "patterns": [
                { "include": "source.tjs" }
            ]
        }
      ]
    },
    "attribute-keyword-exp-quotes": {
      "patterns": [
        {
            "begin": "(exp|cond)(\\s*=\\s*((\"|')))",
            "beginCaptures": {
                "1": { "name": "entity.name.function.kagex" },
                "4": { "name": "string.quoted.single.kagex" }
            },
            "end": "(\\4|$)",
            "endCaptures": {
                "1": { "name": "string.quoted.single.kagex" }
            },
            "patterns": [
                { "include": "source.tjs" }
            ]
        }
      ]
    },
    "attribute-keyword-exp-noquotes": {
      "patterns": [
        {
            "begin": "(exp|cond)(\\s*=\\s*)",
            "beginCaptures": {
                "1": { "name": "entity.name.function.kagex" }
            },
            "end": "(?=[\\s\\]]|$)",
            "patterns": [
                { "include": "source.tjs" }
            ]
        }
      ]
    },
    "attribute-noquotes": {
      "patterns": [
        {
            "begin": "(\\w+)(\\s*=\\s*)",
            "beginCaptures": {
                "1": { "name": "entity.name.function.kagex" }
            },
            "end": "(?=[\\s\\]]|$)",
            "patterns": [
                {
                    "include": "#attribute-rvalue"
                }
            ]
        }
      ]
    },
    "attribute-noarg": {
      "patterns": [
        {
            "match": "(\\w+)",
            "captures": {
                "1": { "name": "entity.name.function.kagex" }
            }
        }
      ]
    },
    "attribute-rvalue": {
      "patterns": [
        {
            "name": "string.other.kagex",
            "patterns": [
                {
                    "include": "#attribute-rvalue-escape"
                },
                {
                    "include": "#attribute-rvalue-inline"
                },
                {
                  "match": ".",
                  "name": "string.other.kagex"
                }
            ]
        }
      ]
    },
    "attribute-rvalue-escape": {
        "name": "constant.character.escape.kagex",
        "match": "`(&|%|$)"
    },
    "attribute-rvalue-inline": {
        "name": "constant.character.escape.kagex",
        "match": "^&.*",
        "patterns": [
            { "include": "source.tjs" }
        ]
    }
  },
  "scopeName": "source.kagex",
  "uuid": "5a619a09-4473-4d8f-9e2e-e231c8073c1c"
}
